{{- if .Values.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.prometheus.server.global.scrape_interval }}
      evaluation_interval: {{ .Values.prometheus.server.global.evaluation_interval }}
      external_labels:
        cluster: 'a4co-production'
        environment: '{{ .Values.global.environment | default "production" }}'

    # Alertmanager configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - {{ .Release.Name }}-prometheus-alertmanager:80

    # Load rules once and periodically evaluate them
    rule_files:
      - /etc/prometheus/rules/*.yml

    # Scrape configurations
    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes service discovery for pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # A4CO Microservices
      {{- range .Values.a4co.microservices.services }}
      - job_name: 'a4co-{{ .name }}'
        static_configs:
          - targets: ['{{ .name }}:{{ .port }}']
            labels:
              service: '{{ .name }}'
              group: 'microservices'
      {{- end }}

      # A4CO Frontend services
      {{- range .Values.a4co.frontend.services }}
      - job_name: 'a4co-{{ .name }}'
        static_configs:
          - targets: ['{{ .name }}:{{ .port }}']
            labels:
              service: '{{ .name }}'
              group: 'frontend'
      {{- end }}

      # OpenTelemetry Collector metrics
      - job_name: 'opentelemetry-collector'
        static_configs:
          - targets: ['{{ .Release.Name }}-opentelemetry-collector:8889']
            labels:
              service: 'opentelemetry-collector'
              group: 'observability'

      # Node Exporter
      {{- if .Values.prometheus.nodeExporter.enabled }}
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):10250'
            replacement: '${1}:9100'
            target_label: __address__
          - source_labels: [__meta_kubernetes_node_name]
            action: replace
            target_label: node
      {{- end }}
{{- end }}