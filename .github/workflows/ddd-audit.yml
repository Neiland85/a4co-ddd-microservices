name: DDD Microservices Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Ejecutar cada lunes a las 9 AM
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  ddd-structure-analysis:
    runs-on: ubuntu-latest
    name: An√°lisis de Estructura DDD
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configurar entorno
      run: |
        chmod +x scripts/*.sh
        mkdir -p audit-reports
    
    - name: An√°lisis de estructura DDD
      run: |
        echo "=== An√°lisis de Estructura DDD ===" > audit-reports/ddd-structure.txt
        echo "Bounded Contexts: $(find . -name "*BoundedContext*" | wc -l)" >> audit-reports/ddd-structure.txt
        echo "Aggregates: $(find . -name "*Aggregate*" | wc -l)" >> audit-reports/ddd-structure.txt
        echo "Entities: $(find . -name "*Entity*" | wc -l)" >> audit-reports/ddd-structure.txt
        echo "Value Objects: $(find . -name "*ValueObject*" -o -name "*VO*" | wc -l)" >> audit-reports/ddd-structure.txt
        echo "Domain Events: $(find . -name "*Event*" | wc -l)" >> audit-reports/ddd-structure.txt
        echo "Repositories: $(find . -name "*Repository*" | wc -l)" >> audit-reports/ddd-structure.txt
    
    - name: Subir reporte de estructura
      uses: actions/upload-artifact@v3
      with:
        name: ddd-structure-report
        path: audit-reports/ddd-structure.txt

  code-quality-metrics:
    runs-on: ubuntu-latest
    name: M√©tricas de Calidad de C√≥digo
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Instalar herramientas
      run: |
        pip install lizard
        sudo apt-get update
        sudo apt-get install -y cloc
    
    - name: An√°lisis de complejidad
      run: |
        lizard . -o audit-reports/complexity.html
        lizard . -C 10 -L 100 -a 5 | tail -20 > audit-reports/complexity-summary.txt
    
    - name: An√°lisis de l√≠neas de c√≥digo
      run: |
        cloc . --out=audit-reports/cloc-report.txt --exclude-dir=node_modules,vendor,.git
    
    - name: Subir reportes de calidad
      uses: actions/upload-artifact@v3
      with:
        name: quality-metrics-reports
        path: audit-reports/

  language-specific-analysis:
    runs-on: ubuntu-latest
    name: An√°lisis Espec√≠fico por Lenguaje
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Detectar lenguaje principal
      id: detect-language
      run: |
        if [ $(find . -name "*.java" | wc -l) -gt 0 ]; then
          echo "language=java" >> $GITHUB_OUTPUT
        elif [ $(find . -name "*.cs" | wc -l) -gt 0 ]; then
          echo "language=csharp" >> $GITHUB_OUTPUT
        elif [ $(find . -name "*.ts" | wc -l) -gt 0 ]; then
          echo "language=typescript" >> $GITHUB_OUTPUT
        elif [ $(find . -name "*.py" | wc -l) -gt 0 ]; then
          echo "language=python" >> $GITHUB_OUTPUT
        elif [ $(find . -name "*.go" | wc -l) -gt 0 ]; then
          echo "language=go" >> $GITHUB_OUTPUT
        else
          echo "language=unknown" >> $GITHUB_OUTPUT
        fi
    
    - name: Setup Java
      if: steps.detect-language.outputs.language == 'java'
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup .NET
      if: steps.detect-language.outputs.language == 'csharp'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    
    - name: Setup Node.js
      if: steps.detect-language.outputs.language == 'typescript'
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Setup Python
      if: steps.detect-language.outputs.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Setup Go
      if: steps.detect-language.outputs.language == 'go'
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Ejecutar an√°lisis espec√≠fico
      run: |
        chmod +x scripts/language-specific-metrics.sh
        ./scripts/language-specific-metrics.sh || true

  sonarqube-analysis:
    runs-on: ubuntu-latest
    name: An√°lisis SonarQube
    if: github.event_name != 'schedule'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  generate-comparison-report:
    runs-on: ubuntu-latest
    needs: [ddd-structure-analysis, code-quality-metrics]
    name: Generar Reporte Comparativo
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Descargar artefactos
      uses: actions/download-artifact@v3
      with:
        path: audit-reports
    
    - name: Generar reporte HTML
      run: |
        cat > audit-reports/comparison-report.html << 'HTML'
        <!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <title>DDD Audit - Comparaci√≥n con Est√°ndares</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; }
                table { border-collapse: collapse; width: 100%; margin: 20px 0; }
                th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
                th { background-color: #4CAF50; color: white; }
                .metric-good { color: green; font-weight: bold; }
                .metric-warning { color: orange; font-weight: bold; }
                .metric-bad { color: red; font-weight: bold; }
                .header { background-color: #f0f0f0; padding: 20px; border-radius: 5px; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üèóÔ∏è DDD Microservices Audit Report</h1>
                <p>Generado: $(date)</p>
                <p>Repositorio: ${{ github.repository }}</p>
                <p>Rama: ${{ github.ref_name }}</p>
            </div>
            
            <h2>üìä Comparaci√≥n con Est√°ndares</h2>
            <table>
                <tr>
                    <th>M√©trica</th>
                    <th>Tu Proyecto</th>
                    <th>Media Nacional</th>
                    <th>Media Europea</th>
                    <th>Media Internacional</th>
                    <th>Estado</th>
                </tr>
                <tr>
                    <td>Coverage</td>
                    <td>Por medir</td>
                    <td>70%</td>
                    <td>75%</td>
                    <td>80%</td>
                    <td class="metric-warning">‚ö†Ô∏è Pendiente</td>
                </tr>
                <tr>
                    <td>Complejidad Ciclom√°tica</td>
                    <td>$(grep "Average" audit-reports/complexity-summary.txt 2>/dev/null | awk '{print $3}' || echo "N/A")</td>
                    <td>&lt;15</td>
                    <td>&lt;12</td>
                    <td>&lt;10</td>
                    <td>üìä Ver detalle</td>
                </tr>
                <tr>
                    <td>Deuda T√©cnica</td>
                    <td>Por medir</td>
                    <td>&lt;30 d√≠as</td>
                    <td>&lt;20 d√≠as</td>
                    <td>&lt;10 d√≠as</td>
                    <td class="metric-warning">‚ö†Ô∏è Configurar SonarQube</td>
                </tr>
            </table>
            
            <h2>üéØ Cumplimiento DDD</h2>
            <table>
                <tr>
                    <th>Elemento DDD</th>
                    <th>Cantidad Encontrada</th>
                    <th>Recomendado</th>
                    <th>Estado</th>
                </tr>
                <tr>
                    <td>Bounded Contexts</td>
                    <td>$(grep "Bounded Contexts:" audit-reports/ddd-structure.txt | awk '{print $3}')</td>
                    <td>2-5</td>
                    <td>‚úÖ</td>
                </tr>
                <tr>
                    <td>Aggregates</td>
                    <td>$(grep "Aggregates:" audit-reports/ddd-structure.txt | awk '{print $2}')</td>
                    <td>1-3 por BC</td>
                    <td>üìä</td>
                </tr>
                <tr>
                    <td>Value Objects</td>
                    <td>$(grep "Value Objects:" audit-reports/ddd-structure.txt | awk '{print $3}')</td>
                    <td>2-3x Entities</td>
                    <td>üìä</td>
                </tr>
            </table>
            
            <h2>üìã Pr√≥ximos Pasos</h2>
            <ol>
                <li>Configurar SonarQube para an√°lisis continuo</li>
                <li>Incrementar cobertura de tests al 80%</li>
                <li>Reducir complejidad ciclom√°tica en m√©todos cr√≠ticos</li>
                <li>Documentar Bounded Contexts y sus interacciones</li>
                <li>Implementar m√°s Value Objects para reducir obsesi√≥n primitiva</li>
            </ol>
        </body>
        </html>
        HTML
    
    - name: Comentar en PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const reportPath = 'audit-reports/ddd-structure.txt';
          const report = fs.readFileSync(reportPath, 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üèóÔ∏è DDD Audit Results\n\n\`\`\`\n${report}\n\`\`\`\n\n[Ver reporte completo](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
          });
    
    - name: Subir reporte final
      uses: actions/upload-artifact@v3
      with:
        name: final-comparison-report
        path: audit-reports/comparison-report.html

  notify-results:
    runs-on: ubuntu-latest
    needs: [generate-comparison-report]
    if: always()
    name: Notificar Resultados
    
    steps:
    - name: Crear resumen
      run: |
        echo "# üìä DDD Microservices Audit Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Resultados del An√°lisis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ An√°lisis de estructura DDD completado" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ M√©tricas de calidad calculadas" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Comparaci√≥n con est√°ndares generada" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üì• Descargar Reportes" >> $GITHUB_STEP_SUMMARY
        echo "Los reportes completos est√°n disponibles en los artefactos de este workflow." >> $GITHUB_STEP_SUMMARY