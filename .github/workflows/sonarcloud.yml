---
name: SonarCloud Analysis

on:
  pull_request:
    branches: [main, develop, master]
  push:
    branches: [main, develop, master]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: ./.github/actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: SonarCloud Scan
        run: |
          # Instalar SonarCloud Scanner
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip
          export PATH="$PWD/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
          
          # Ejecutar an√°lisis
          sonar-scanner \
            -Dsonar.projectKey=Neiland85_a4co-ddd-microservices \
            -Dsonar.organization=neiland85 \
            -Dsonar.sources=apps,packages \
            -Dsonar.tests=apps,packages \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.coverage.exclusions=**/*.test.ts,**/*.spec.ts,**/*.test.tsx,**/*.spec.tsx \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}