#!/bin/bash

# Script para verificar servicios disponibles en el monorepo

echo "üîç Verificando servicios disponibles en el monorepo A4CO..."
echo "=================================================="

# Frontend Apps
echo -e "\nüì± APLICACIONES FRONTEND:"
if [ -d "apps/web/v0dev/a-head" ]; then
    echo "  ‚úÖ Frontend Principal (Next.js) - apps/web/v0dev/a-head"
fi
if [ -d "apps/dashboard-web" ]; then
    echo "  ‚úÖ Dashboard Web - apps/dashboard-web"
fi

# Design System
echo -e "\nüé® SISTEMA DE DISE√ëO:"
if [ -d "packages/design-system" ] && [ -f "packages/design-system/package.json" ]; then
    if grep -q "storybook" "packages/design-system/package.json"; then
        echo "  ‚úÖ Design System con Storybook - packages/design-system"
    fi
fi

# Backend Services
echo -e "\n‚öôÔ∏è  MICROSERVICIOS BACKEND:"
for service_dir in apps/*-service; do
    if [ -d "$service_dir" ]; then
        service_name=$(basename "$service_dir")
        echo "  ‚úÖ $service_name - $service_dir"
    fi
done

# Check for package.json scripts
echo -e "\nüìã SCRIPTS DISPONIBLES EN package.json:"
if [ -f "package.json" ]; then
    echo "Scripts principales:"
    grep -E '"(dev|start|build|test)"' package.json | sed 's/^/  /'
fi

# Check for infrastructure
echo -e "\nüê≥ INFRAESTRUCTURA:"
if [ -f "docker-compose.dev.yml" ]; then
    echo "  ‚úÖ docker-compose.dev.yml encontrado"
fi
if [ -f "docker-compose.messaging.yml" ]; then
    echo "  ‚úÖ docker-compose.messaging.yml encontrado"
fi
if [ -f "scripts/start-messaging-infrastructure.sh" ]; then
    echo "  ‚úÖ Script de infraestructura de mensajer√≠a encontrado"
fi

# Check ports configuration
echo -e "\nüîå PUERTOS ESPERADOS:"
echo "  - Frontend: 3000"
echo "  - Dashboard: 3001" 
echo "  - Storybook: 6006"
echo "  - Backend services: 4001-4010"
echo "  - PostgreSQL: 5432"
echo "  - Redis: 6379"
echo "  - NATS: 4222"

echo -e "\n‚ú® Para iniciar todos los servicios, ejecuta:"
echo "  ./scripts/start-dev-services.sh"
echo "  o"
echo "  pnpm dev"